services:
  # TimescaleDB for transactional data + time-series market data
  timescaledb:
    image: timescale/timescaledb:latest-pg15
    container_name: timescaledb
    environment:
      - POSTGRES_DB=stockmarket
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5434:5432"
    volumes:
      - timescale_data:/var/lib/postgresql/data
      - ./init/timescale:/docker-entrypoint-initdb.d
      - ./init/procedures.sql:/docker-entrypoint-initdb.d/99-procedures.sql
    networks:
      - stock-network
    command: postgres -c shared_preload_libraries=timescaledb
    restart: unless-stopped

  # Redis for sessions, tokens, caching, pub/sub
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./init/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - stock-network
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf --appendonly yes

  # ClickHouse for analytics and historical data
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    ports:
      - "8123:8123"  # HTTP interface
      - "9000:9000"  # Native interface
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./init/clickhouse:/docker-entrypoint-initdb.d
    networks:
      - stock-network
    restart: unless-stopped
    environment:
      - CLICKHOUSE_DB=analytics
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=

  # Kafka for event streaming (KRaft mode - no Zookeeper needed)
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
    volumes:
      - ./init/kafka/topics.sh:/opt/bitnami/kafka/bin/create-topics.sh
    networks:
      - stock-network
    restart: unless-stopped

networks:
  stock-network:
    driver: bridge

volumes:
  timescale_data:
  redis_data:
  clickhouse_data: